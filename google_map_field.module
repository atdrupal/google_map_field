<?php

/**
 * Implements hook_field_info().
 */
function google_map_field_field_info() {
  return array(
    'google_map_field' => array(
      'label' => 'Google Map Field',
      'description' => t('This field stores and renders Google Maps.'),
      'default_widget' => 'google_map_field_widget',
      'default_formatter' => 'google_map_field_default',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function google_map_field_field_widget_info() {
  return array(
    'google_map_field_widget' => array(
      'label' => t('Map'),
      'field types' => array('google_map_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function google_map_field_field_formatter_info() {
  $formats = array(
    'google_map_field_default' => array(
      'label' => t('Map'),
      'description' => t('Default display for Google map field.'),
      'field types' => array('google_map_field'),
    ),
  );
  return $formats;
}

/**
 * Implements hook_field_widget_error().
 */
function google_map_field_field_widget_error($element, $error, $form, &$form_state) {
  form_error($element, $error['message']);
}

/**
 * Implements hook_content_is_empty().
 */
function google_map_field_field_is_empty($item, $field) {
  if (empty($item['lat']) || empty($item['lon'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_view().
 */
function google_map_field_field_formatter_view($object_type, $object, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = google_map_field_format_field($item, $delta);
  }
  return $element;
}

/**
 *  implements hook_format_field().
 */
function google_map_field_format_field($item, $delta) {
  // add the google API
  drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
  // get the map details
  $lat = $item['lat'];
  $lon = $item['lon'];
  $wth = $item['map_width'];
  $hth = $item['map_height'];
  $zom = $item['zoom'];
  // build the inline JS to build the map
  $js = '
    var map_' . $delta . ';
    jQuery(document).ready(function(){
      var latlng = new google.maps.LatLng(' . $lat . ', ' . $lon . ');
      var mapOptions = {
        zoom: ' . $zom . ',
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map_' . $delta . ' = new google.maps.Map(document.getElementById("google_map_field_' . $delta . '"), mapOptions);
      // add a marker to the map for the dealer
      marker = new google.maps.Marker({
        position: latlng,
        map: map_' . $delta . ',
      });
  	});
  ';
  drupal_add_js($js, 'inline');

  $element = array(
    '#type' => 'container',
    '#attributes' => array( 'class' => array( 'field-item') ),
  );
  $element['google_map_field'] = array(
    'item' => array(
      '#type' => 'container',
      '#attributes' => array( 'class' => array( 'field-item') ),
      'text' => array(
        '#markup' => '<div id="google_map_field_' . $delta . '" style="width: ' . $wth . 'px; height: ' . $hth . 'px;"></div>',
      ),
    ),
  );
  return $element;
}

/**
 *  implements hook_field_widget_form().
 */
function google_map_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $fname = str_replace('_', '-', $element['#field_name']);
  $element['#title'] = t('Google Map Field Settings');
  $element['#description'] = '<p>' . t('To set a location for the map, use the controls to zoom in or out and drag the map to find the correct area.  Once you have found the correct location click that point to set the map.') . '</p>';
  $element += array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $element['lat'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#default_value' => isset($items[$delta]['lat']) ? $items[$delta]['lat'] : NULL,
    '#prefix' => '<div class="clearfix"><div style="float: left; width: 30%;">',
  );
  $element['lon'] = array(
    '#type' => 'textfield',
    '#title' => t('Longitude'),
    '#default_value' => isset($items[$delta]['lon']) ? $items[$delta]['lon'] : NULL,
  );
  $element['map_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Width'),
    '#default_value' => isset($items[$delta]['map_width']) ? $items[$delta]['map_width'] : 300,
  );
  $element['map_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Height'),
    '#default_value' => isset($items[$delta]['map_height']) ? $items[$delta]['map_height'] : 200,
  );
  $element['zoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoom'),
    '#default_value' => isset($items[$delta]['zoom']) ? $items[$delta]['zoom'] : 13,
    '#suffix' => '</div>',
  );
  $element['map'] = array(
    '#markup' => '<div id="google_map_picker_' . $delta . '" style="width: 100%; height: 350px;"></div>',
    '#prefix' => '<div style="float: left; width: 65%;">',
    '#suffix' => '</div></div>',
  );
  // add the google API
  drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
  // get the map details
  $lat = isset($items[$delta]['lat']) ? $items[$delta]['lat'] : 51.5171;
  $lon = isset($items[$delta]['lon']) ? $items[$delta]['lon'] : -0.15;
  $zom = isset($items[$delta]['zoom']) ? $items[$delta]['zoom'] : 13;
  // build the inline JS to build the map
  $js = '
    var map_' . $delta . ';
    function getCoords_' . $delta . '(latlng) {
      marker_' . $delta . '.setPosition(latlng);
      map_' . $delta . '.setCenter(latlng);
      document.getElementById("edit-' . $fname . '-und-' . $delta . '-lat").value = latlng.lat();
      document.getElementById("edit-' . $fname . '-und-' . $delta . '-lon").value = latlng.lng();
    }
    jQuery(document).ready(function(){
      var latlng = new google.maps.LatLng(' . $lat . ', ' . $lon . ');
      var mapOptions = {
        zoom: ' . $zom . ',
        center: latlng,
        streetViewControl: false,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map_' . $delta . ' = new google.maps.Map(document.getElementById("google_map_picker_' . $delta . '"), mapOptions);
      marker_' . $delta . ' = new google.maps.Marker({
        position: latlng,
        map: map_' . $delta . ',
      });
      // add a click listener to the map
      google.maps.event.addListener(map_' . $delta . ', "click", function(event) {
        getCoords_' . $delta . '(event.latLng);
      });
      google.maps.event.addListener(map_' . $delta . ', "zoom_changed", function(event) {
        document.getElementById("edit-' . $fname . '-und-' . $delta . '-zoom").value = map_' . $delta . '.getZoom();
      });
  	});
  ';
  drupal_add_js($js, 'inline');
  return $element;
}
