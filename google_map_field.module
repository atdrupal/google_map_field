<?php

/**
 * @file
 * This file defines all the necessary hooks and functions to create
 * a Google Map Field field type and also a WYSIWYG editor plugin
 * for inserting maps directly into filtered content.
 */


/**
 *  Implements hook_menu().
 */
function google_map_field_menu() {
  $items = array();

  $items['google-map-field/token-builder'] = array(
    'title' => 'Google Map Field Inline Token Builder',
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_map_field_tokenbuilder_form'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_field_info().
 */
function google_map_field_field_info() {
  return array(
    'google_map_field' => array(
      'label' => 'Google Map Field',
      'description' => t('This field stores and renders Google Maps.'),
      'default_widget' => 'google_map_field_widget',
      'default_formatter' => 'google_map_field_default',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function google_map_field_field_widget_info() {
  return array(
    'google_map_field_widget' => array(
      'label' => t('Map'),
      'field types' => array('google_map_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function google_map_field_field_formatter_info() {
  $formats = array(
    'google_map_field_default' => array(
      'label' => t('Map'),
      'description' => t('Default display for Google map field.'),
      'field types' => array('google_map_field'),
    ),
  );
  return $formats;
}

/**
 * Implements hook_field_widget_error().
 */
function google_map_field_field_widget_error($element, $error, $form, &$form_state) {
  form_error($element, $error['message']);
}

/**
 * Implements hook_content_is_empty().
 */
function google_map_field_field_is_empty($item, $field) {
  if (empty($item['lat']) || empty($item['lon'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_view().
 */
function google_map_field_field_formatter_view($object_type, $object, $field, $instance, $langcode, $items, $display) {
  drupal_add_css(drupal_get_path('module', 'google_map_field') . '/css/google_map_field.css');
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = google_map_field_format_field($item, $delta);
  }
  return $element;
}

/**
 *  Implements hook_format_field().
 */
function google_map_field_format_field($item, $delta) {
  // Add the google API.
  drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
  // Get the map details.
  $lat = $item['lat'];
  $lon = $item['lon'];
  $wth = $item['map_width'];
  $hth = $item['map_height'];
  $zom = $item['zoom'];
  $name = $item['name'];
  // Build the inline JS to build the map.
  $js = '
    var map_' . $delta . ';
    jQuery(document).ready(function(){
      var latlng = new google.maps.LatLng(' . $lat . ', ' . $lon . ');
      var mapOptions = {
        zoom: ' . $zom . ',
        center: latlng,
        streetViewControl: false,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map_' . $delta . ' = new google.maps.Map(document.getElementById("google_map_field_' . $delta . '"), mapOptions);
      // add a marker to the map for the dealer
      marker = new google.maps.Marker({
        position: latlng,
        map: map_' . $delta . ',
      });
    });
  ';
  drupal_add_js($js, 'inline');

  $element = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('field-item')),
  );
  $element['google_map_field'] = array(
    'item' => array(
      '#type' => 'container',
      '#attributes' => array('class' => array('field-item')),
      'text' => array(
        '#markup' => '<div class="google-map-field"><div class="google-map-field-label">' . $name . '</div><div id="google_map_field_' . $delta . '" style="width: ' . $wth . 'px; height: ' . $hth . 'px;"></div></div>',
      ),
    ),
  );
  return $element;
}

/**
 *  Implements hook_field_widget_form().
 */
function google_map_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $fname = str_replace('_', '-', $element['#field_name']);
  $element['#title'] = t('Google Map Field Settings');
  $element['#description'] = '<p>' . t('To set a location for the map, use the controls to zoom in or out and drag the map to find the correct area.  Once you have found the correct location click that point to set the map.') . '</p>';
  $element += array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $element['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Name'),
    '#default_value' => isset($items[$delta]['name']) ? $items[$delta]['name'] : NULL,
    '#prefix' => '<div class="clearfix"><div style="float: left; width: 30%;">',
  );
  $element['lat'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#default_value' => isset($items[$delta]['lat']) ? $items[$delta]['lat'] : NULL,
  );
  $element['lon'] = array(
    '#type' => 'textfield',
    '#title' => t('Longitude'),
    '#default_value' => isset($items[$delta]['lon']) ? $items[$delta]['lon'] : NULL,
  );
  $element['map_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Width'),
    '#default_value' => isset($items[$delta]['map_width']) ? $items[$delta]['map_width'] : 300,
  );
  $element['map_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Height'),
    '#default_value' => isset($items[$delta]['map_height']) ? $items[$delta]['map_height'] : 200,
  );
  $element['zoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoom'),
    '#default_value' => isset($items[$delta]['zoom']) ? $items[$delta]['zoom'] : 13,
    '#suffix' => '</div>',
  );
  $element['map'] = array(
    '#markup' => '<div id="google_map_picker_' . $delta . '" style="width: 100%; height: 350px;"></div>',
    '#prefix' => '<div style="float: left; width: 65%;">',
    '#suffix' => '</div></div>',
  );
  // Add the google API.
  drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
  // Get the map details.
  $lat = isset($items[$delta]['lat']) ? $items[$delta]['lat'] : 51.5171;
  $lon = isset($items[$delta]['lon']) ? $items[$delta]['lon'] : -0.15;
  $zom = isset($items[$delta]['zoom']) ? $items[$delta]['zoom'] : 13;
  // Build the inline JS to build the map.
  $js = '
    var map_' . $delta . ';
    function getCoords_' . $delta . '(latlng) {
      marker_' . $delta . '.setPosition(latlng);
      map_' . $delta . '.setCenter(latlng);
      document.getElementById("edit-' . $fname . '-und-' . $delta . '-lat").value = latlng.lat();
      document.getElementById("edit-' . $fname . '-und-' . $delta . '-lon").value = latlng.lng();
    }
    jQuery(document).ready(function(){
      var latlng = new google.maps.LatLng(' . $lat . ', ' . $lon . ');
      var mapOptions = {
        zoom: ' . $zom . ',
        center: latlng,
        streetViewControl: false,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map_' . $delta . ' = new google.maps.Map(document.getElementById("google_map_picker_' . $delta . '"), mapOptions);
      marker_' . $delta . ' = new google.maps.Marker({
        position: latlng,
        map: map_' . $delta . ',
      });
      // add a click listener to the map
      google.maps.event.addListener(map_' . $delta . ', "click", function(event) {
        getCoords_' . $delta . '(event.latLng);
      });
      google.maps.event.addListener(map_' . $delta . ', "zoom_changed", function(event) {
        document.getElementById("edit-' . $fname . '-und-' . $delta . '-zoom").value = map_' . $delta . '.getZoom();
      });
    });
  ';
  drupal_add_js($js, 'inline');
  return $element;
}

/**
 * Implements hook_filter_info().
 */
function google_map_field_filter_info() {
  $filters['google_map_field_token'] = array(
    'title' => t('Google Map Field'),
    'description' => t('Use tokens to insert Google Map Fields.'),
    'process callback' => '_google_map_field_filter_process',
    'cache' => FALSE,
    'tips callback' => '_google_map_field_filter_tips',
  );
  return $filters;
}

/**
 *  Process callback for hook_filter_info().
 */
function _google_map_field_filter_process($text, $filter, $format) {
  $out = $text;
  $matches = array();
  preg_match_all('/\[gmf\:(.*)\] /x', $text, $matches);
  $i = 0;
  $delta = 1000;

  drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
  while (isset($matches[1][$i])) {
    $match = str_replace(']', '', str_replace('[', '', $matches[1][$i]));
    $settings = explode(',', $match);
    $map_settings = array();
    foreach ($settings as $setting) {
      $offset = strpos($setting, '=');
      if ($offset !== FALSE) {
        $key = trim(substr($setting, 0, $offset));
        $val = trim(substr($setting, $offset + 1));
        $map_settings[$key] = $val;
      }
    }
    $js = '
      var map_' . $delta . ';
      jQuery(document).ready(function(){
        var latlng = new google.maps.LatLng(' . $map_settings['lat'] . ', ' . $map_settings['lon'] . ');
        var mapOptions = {
          zoom: ' . $map_settings['zoom'] . ',
          center: latlng,
          streetViewControl: false,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map_' . $delta . ' = new google.maps.Map(document.getElementById("inline_google_map_field_' . $delta . '"), mapOptions);
        // add a marker to the map for the dealer
        marker = new google.maps.Marker({
          position: latlng,
          map: map_' . $delta . ',
        });
      });
    ';
    drupal_add_js($js, 'inline');
    $replace = str_replace(']', '\\]/', str_replace('[', '/\\[', $matches[0][$i]));
    $replacement = '<div id="inline_google_map_field_' . $delta . '" class="inline-google-map-field" style="width: ' . $map_settings['width'] . 'px; height: ' . $map_settings['height'] . 'px;"></div>';
    $out = preg_replace($replace, $replacement, $out, 1);
    $delta++;
    $i++;
  }

  return $out;
}

/**
 *  Implements hook_filter_tips().
 */
function _google_map_field_filter_tips($filter, $format, $long) {
  return t("To insert a google map field, <a href='/google-map-field/token-builder' target='_new'>click here for the token builder</a> (opens in a new window)");
}

/**
 *  WYSIWYG module integration for map token builder
 */
function google_map_field_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      return 'wysiwyg_plugins';
      break;
  }
}

/**
 *  Implements hook_form_alter().
 *
 *  Ensures that the necessary libraries and Javascript is added to the
 *  node and comment forms so that the WYSIWYG google map field editor
 *  works
 */
function google_map_field_form_alter(&$form, $form_state, $form_id) {
  if (strpos($form_id, 'node_form') !== FALSE || strpos($form_id, 'comment') !== FALSE) {
    $js = '
      function buildToken() {
        var $ = jQuery.noConflict();
        $("#edit-zoom").val(map.getZoom());
        $("#edit-token").val("lat=" + marker.getPosition().lat() + ",lon=" + marker.getPosition().lng() + ",width=" + $("#edit-width").val() + ",height=" + $("#edit-height").val() + ",zoom=" + map.getZoom());
        return false;
      }
      function setMarker(latLng) {
        marker.setPosition(latLng);
        map.setCenter(latLng);
      }
      var map;
      function getMap() {
        var latlng = new google.maps.LatLng(51.0, 0.12);
        var mapOptions = {
          zoom: 9,
          center: latlng,
          streetViewControl: false,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("google_map_field_selector"), mapOptions);
        marker = new google.maps.Marker({
          position: latlng,
          map: map,
        });
        google.maps.event.addListener(map, "click", function(event) {
          setMarker(event.latLng)
          buildToken();
        });
        google.maps.event.addListener(map, "zoom_changed", function(event) {
          buildToken();
        });
      };
    ';
    drupal_add_js('http://maps.googleapis.com/maps/api/js?sensor=false', 'external');
    drupal_add_js($js, 'inline');
    drupal_add_css(drupal_get_path('module', 'google_map_field') . '/wysiwyg_plugins/gmf_tokenbuilder/css/gmf_tokenbuilder.css');
    drupal_add_library('system', 'ui.dialog');
    drupal_add_library('system', 'ui.draggable');
    drupal_add_js(array('google_map_field' => array('current_form' => $form['form_build_id']['#value'])), 'setting');
  }
}

/**
 *  Form builder for the google map field token builder.
 */
function google_map_field_tokenbuilder_form($form, &$form_state) {
  drupal_set_title(t('Google Map Field Token Builder'));

  $form = array();
  $form['token_builder']['map'] = array(
    '#markup' => '<div id="google_map_field_selector" style="width: 300px; height: 250px;"></div>',
    '#prefix' => '<div class="google-map-field-tokenbuilder clearfix"><div class="google-map-field-tokenbuilder-map">',
    '#suffix' => '</div>',
  );
  $form['token_builder']['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Width'),
    '#size' => 15,
    '#default_value' => '300',
    '#attributes' => array('onkeyup' => 'return buildToken();'),
    '#prefix' => '<div class="google-map-field-tokenbuilder-fields">',
  );
  $form['token_builder']['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Height'),
    '#size' => 15,
    '#default_value' => '250',
    '#attributes' => array('onkeyup' => 'return buildToken();'),
  );
  $form['token_builder']['zoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoom'),
    '#size' => 15,
    '#default_value' => '9',
    '#attributes' => array('readonly' => 'readonly'),
    '#suffix' => '</div></div>',
  );
  $form['token_builder']['token'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Google Map Field Token'),
    '#default_value' => 'lat=51.0,lon=0.12,width=300,height=250,zoom=9',
    '#attributes' => array('readonly' => 'readonly'),
  );

  return $form;
}
